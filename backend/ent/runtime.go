// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/Piichet/app/ent/gender"
	"github.com/Piichet/app/ent/position"
	"github.com/Piichet/app/ent/schema"
	"github.com/Piichet/app/ent/title"
	"github.com/Piichet/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	genderFields := schema.Gender{}.Fields()
	_ = genderFields
	// genderDescGender is the schema descriptor for gender field.
	genderDescGender := genderFields[0].Descriptor()
	// gender.GenderValidator is a validator for the "gender" field. It is called by the builders before save.
	gender.GenderValidator = genderDescGender.Validators[0].(func(string) error)
	positionFields := schema.Position{}.Fields()
	_ = positionFields
	// positionDescPosition is the schema descriptor for position field.
	positionDescPosition := positionFields[0].Descriptor()
	// position.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	position.PositionValidator = positionDescPosition.Validators[0].(func(string) error)
	titleFields := schema.Title{}.Fields()
	_ = titleFields
	// titleDescTitle is the schema descriptor for title field.
	titleDescTitle := titleFields[0].Descriptor()
	// title.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	title.TitleValidator = titleDescTitle.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
